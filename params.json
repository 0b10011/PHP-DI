{"body":"## Dependency Injection\r\n\r\nAn example is worth a thousand words:\r\n\r\n```\r\nuse DI\\Annotations\\Inject;\r\n\r\nclass MyClass {\r\n    /**\r\n     * @Inject\r\n     * @var MyService\r\n     */\r\n    private $service;\r\n\r\n    public function __construct() {\r\n        \\DI\\DependencyManager::getInstance()->resolveDependencies($this);\r\n    }\r\n\r\n    public function doSomething($id) {\r\n        $object = $service->getSomething($id);\r\n    }\r\n}\r\n```\r\n\r\nRead more in the documentation: https://github.com/mnapoli/PHP-DI/wiki.\r\n\r\n### Value injection\r\n\r\nPHP-DI also supports `@Value` annotations to inject values:\r\n\r\n```\r\nuse DI\\Annotations\\Value;\r\n\r\nclass MyClass {\r\n    /**\r\n     * @Value(\"db.host\")\r\n     */\r\n    private $dbHost;\r\n\r\n    public function __construct() {\r\n        \\DI\\DependencyManager::getInstance()->resolveDependencies($this);\r\n    }\r\n}\r\n```\r\n\r\nYou can use a `.ini` file to configure the value to inject:\r\n\r\n```\r\ndi.values[\"db.host\"] = \"localhost\"\r\n```\r\n\r\n### Installation\r\n\r\n#### Using Composer?\r\n\r\nPHP-DI is published on packagist.org and can be automatically installed with [Composer](http://getcomposer.org/doc/00-intro.md):\r\n\r\n```\r\n{\r\n    \"require\": {\r\n        \"mnapoli/php-di\": \"dev-master\",\r\n    }\r\n}\r\n```\r\n\r\nThat's it! You can start using it.\r\n\r\n#### Using Zend Framework?\r\n\r\nCheck out the Zend Framework quickstart with PHP-DI already configured with examples on [zf-quickstart-di](https://github.com/mnapoli/zf-quickstart-di).\r\n\r\n### Documentation\r\n\r\nYou can read more at https://github.com/mnapoli/PHP-DI/wiki.","tagline":"PHP Dependency Injection","google":"UA-15584647-13","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"PHP-DI"}